# NOT USED AT THE MOMENT !!!

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-data
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  annotations: {}
spec:
  selector:
    matchLabels:
      app: mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: container
          image: mongo
          volumeMounts:
            - mountPath: "/data/db"
              name: data
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: root
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: example
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: mongo-data
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
spec:
  selector:
    app: mongo
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-express
  annotations: {}
spec:
  selector:
    matchLabels:
      app: mongo-express
  replicas: 1
  template:
    metadata:
      labels:
        app: mongo-express
    spec:
      containers:
        - name: container
          image: mongo-express
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: ME_CONFIG_MONGODB_ADMINUSERNAME
              value: root
            - name: ME_CONFIG_MONGODB_ADMINPASSWORD
              value: example
            - name: ME_CONFIG_MONGODB_URL
              value: mongodb://root:example@mongo.christoph.svc.cluster.local:27017/
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-express
spec:
  selector:
    app: mongo-express
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
