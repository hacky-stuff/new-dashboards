# based on https://grafana.com/docs/grafana/latest/setup-grafana/installation/kubernetes/
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  labels:
    app: grafana
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  selector:
    matchLabels:
      app: grafana
#  replicas: 1
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: container
          image: grafana/grafana-oss
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: http-grafana
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /robots.txt
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 250m
              memory: 750Mi
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-pv
          env:
            - name: GF_FEATURE_TOGGLES_ENABLE
              value: publicDashboards
#            - name: GF_INSTALL_PLUGINS
#              value: grafana-clock-panel, grafana-simple-json-datasource
      volumes:
        - name: grafana-pv
          persistentVolumeClaim:
            claimName: grafana-pvc

#   --volume grafana-storage:/var/lib/grafana \
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  ports:
    - name: http-grafana
      protocol: TCP
      port: 3000
      targetPort: 3000
  selector:
    app: grafana
  sessionAffinity: None
  type: LoadBalancer
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  to:
    kind: Service
    name: grafana
  port:
    targetPort: http-grafana
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
